<UserControl
    x:Class="PowerLauncher.ResultList"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
    mc:Ignorable="d"    
    d:DesignHeight="300"
    d:DesignWidth="720">
   
    <UserControl.Resources>
        <!-- These colors are based on the UWP XAML resources -->

        <!--<SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#30FFFFFF" /> --><!-- Default --><!--
        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#33FFFFFF" /> --><!-- High contrast -->
        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#2E000000" /> <!-- Light -->

        <!--<SolidColorBrush x:Key="ButtonBorderPointerOver" Color="#61FFFFFF" /> --><!-- Default --><!--
        <SolidColorBrush x:Key="ButtonBorderPointerOver" Color="#66FFFFFF" /> --><!-- High contrast -->
        <SolidColorBrush x:Key="ButtonBorderPointerOver" Color="#61000000" /> <!-- Light -->


        <!--<SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#30FFFFFF" /> --><!-- Default --><!--
        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#33FFFFFF" /> --><!-- High contrast -->
        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#33FFFFFF" /> <!-- Light -->


        <!--<SolidColorBrush x:Key="ButtonBorderPressed" Color="Transparent" /> --><!-- Default --><!--
        <SolidColorBrush x:Key="ButtonBorderPressed" Color="Transparent" /> --><!-- High contrast -->
        <SolidColorBrush x:Key="ButtonBorderPressed" Color="Transparent" /> <!-- Light -->


        <Color x:Key="SystemBaseMediumLowColor">#66FFFFFF</Color>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="4" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonBackgroundPointerOver}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ButtonBorderPointerOver}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonBackgroundPressed}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ButtonBorderPressed}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--<Style x:Key="CommandButtonGridViewItemContainerStyle" TargetType="GridViewItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewItem">
                        <ListViewItemPresenter x:Name="Root" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="PointerOver"/>
                                    <VisualState x:Name="PointerOverSelected"/>
                                    <VisualState x:Name="PointerOverPressed"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="PressedSelected"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    </UserControl.Resources>

    <Grid 
        x:Name="PowerBar"  
        VerticalAlignment="Top">
        <ListView
            x:Name="SuggestionsList"
            x:FieldModifier="public"
            Background="Transparent"
            BorderThickness="0"
            MaxHeight="{Binding Results.MaxHeight}"
            MinHeight="{Binding Results.MinHeight}"          
            Margin="0"
            ItemsSource="{Binding Results.Results, Mode=OneWay}"
            Padding="-1, 0"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"                       
            SelectionMode="Single"
            SelectedIndex="{Binding Results.SelectedIndex, Mode=TwoWay}">
            <!--AllowFocusOnInteraction="False"
            IsItemClickEnabled="True"-->
            <!--Style="{StaticResource ListViewNoAnimations}"-->
            <ListView.ItemTemplate>
                <DataTemplate >
                    <Grid Height="72" Width="642" Background="Transparent" >
                        <Behaviors:Interaction.Triggers>
                            <Behaviors:EventTrigger EventName="MouseEnter">
                                <Behaviors:InvokeCommandAction Command="{Binding ActivateContextButtonsHoverCommand}"/>
                            </Behaviors:EventTrigger>
                            <Behaviors:EventTrigger EventName="MouseLeave">
                                <Behaviors:InvokeCommandAction Command="{Binding DeactivateContextButtonsHoverCommand}"/>
                            </Behaviors:EventTrigger>
                        </Behaviors:Interaction.Triggers>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="64" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions >
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Image x:Name="AppIcon" Height="36" MaxWidth="56" Grid.RowSpan="2" Margin="-8,0,0,0" HorizontalAlignment="Center" Source="{Binding Image}" />
                        <TextBlock x:Name="Title" Grid.Column="1" Text="{Binding Result.Title}" FontWeight="SemiBold" FontSize="20" Margin="0,0,0,-2" VerticalAlignment="Bottom"/>
                        <TextBlock x:Name="Path" Grid.Column="1" Text= "{Binding Result.SubTitle}" Grid.Row="1" Opacity="0.6" Margin="0,2,0,0" VerticalAlignment="Top"/>
                        <ListView                                  
                            HorizontalAlignment="Right" 
                            VerticalAlignment="Center"                                  
                            Margin="8,8,0,0"
                            Background="Transparent"
                            BorderThickness="0"
                            Grid.RowSpan="2" 
                            Grid.Column="2"
                            ScrollViewer.VerticalScrollBarVisibility="Disabled"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            ItemsSource="{Binding ContextMenuItems}" 
                            SelectionMode="Single"
                            SelectedIndex="{Binding ContextMenuSelectedIndex}"
                            Visibility="{Binding AreContextButtonsActive, Converter={StaticResource BooleanToVisibilityConverter}}"
                            >
                            <!--ItemContainerStyle="{StaticResource CommandButtonGridViewItemContainerStyle}"-->
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Button Style="{StaticResource IconButtonStyle}" Command="{Binding Command}" VerticalAlignment="Center" Height="42" Width="42" BorderThickness="1" >
                                        <!--Style="{ThemeResource IconOnlyButton}"-->
                                        <!--CornerRadius="4"-->
                                        <ToolTipService.ToolTip>
                                            <TextBlock Text="{Binding Title}"/>
                                        </ToolTipService.ToolTip>
                                        <Button.Content>
                                            <TextBlock FontFamily="{Binding FontFamily}" FontSize="16" Text="{Binding Glyph}"/>
                                        </Button.Content>

                                        <!--<Button.InputBindings>
                                            <KeyBinding
                                                Key="{Binding AcceleratorKey}"
                                                Modifiers="{Binding AcceleratorModifiers}"
                                                Command="{Binding Command}"
                                            />
                                        </Button.InputBindings>-->
                                        <!--IsEnabled="{Binding IsAcceleratorKeyEnabled}"-->
                                    </Button>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</UserControl>